{"version":3,"sources":["loaders/configuration.loader.ts"],"names":[],"mappings":";;AACA,oCAA6C;AAC7C,2BAAgC;AAChC,+CAAqC;AACrC,2CAAwC;AAExC,oDAAuD;AAEvD;IAAA;QACY,wCAAmC,GAAG,yBAAiB,CAAC,WAAW,CAAC;QAEpE,qCAAgC,GAAG,yBAAiB,CAAC,QAAQ,CAAC;QAE9D,oCAA+B,GAAG,yBAAiB,CAAC,OAAO,CAAC;QAE5D,mCAA8B,GAAG,yBAAiB,CAAC,MAAM,CAAC;QAE1D,oCAA+B,GAAG,yBAAiB,CAAC,OAAO,CAAC;QAE1D,WAAM,GAAG,IAAI,eAAM,CAAC,qBAAqB,CAAC,CAAC;IAqFzD,CAAC;IAhFU,8BAA8B;QACjC,OAAO,eAAU,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAChE,CAAC;IAKM,2BAA2B;QAC9B,OAAO,eAAU,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;IAC7D,CAAC;IAKM,0BAA0B;QAC7B,OAAO,eAAU,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IAC5D,CAAC;IAKM,yBAAyB;QAC5B,OAAO,eAAU,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC3D,CAAC;IAKM,0BAA0B;QAC7B,OAAO,eAAU,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;IAC5D,CAAC;IAOM,IAAI,CAAI,IAAY;QACvB,OAAO,kBAAI,CAAC,IAAI,CAAI,IAAI,CAAC,CAAC;IAC9B,CAAC;IAKM,4BAA4B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAA2B,IAAI,CAAC,gCAAgC,CAAC,CAAC;IACtF,CAAC;IAKM,yBAAyB;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAwB,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC9F,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE;YACzB,MAAM,EAAE,IAAI,uBAAa,CAAC,KAAK,CAAC;SACnC,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;IACzB,CAAC;IAKM,wBAAwB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAuB,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACjF,CAAC;IAKM,uBAAuB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAsB,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC/E,CAAC;IAKM,wBAAwB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAuB,IAAI,CAAC,+BAA+B,CAAC,CAAC;IACjF,CAAC;CACJ;AAhGD,kDAgGC;AAEY,QAAA,aAAa,GAAG,IAAI,mBAAmB,EAAE,CAAC","file":"configuration.loader.js","sourcesContent":["import { ApplicationConfiguration, DatabaseConfiguration, GraphqlConfiguration, ServerConfiguration } from \"../configurations\";\nimport { ConfigurationPath } from \"../paths\";\nimport { existsSync } from \"fs\";\nimport { Json } from \"./json.loader\";\nimport { Logger } from \"@nestjs/common\";\nimport { SwaggerConfiguration } from \"../configurations/swagger.configuration\";\nimport { TypeormLogger } from \"@notadd/logger/loggers\";\n\nexport class ConfigurationLoader {\n    private pathForApplicationConfigurationFile = ConfigurationPath.application;\n\n    private pathForDatabaseConfigurationFile = ConfigurationPath.database;\n\n    private pathForGraphqlConfigurationFile = ConfigurationPath.graphql;\n\n    private pathForServerConfigurationFile = ConfigurationPath.server;\n\n    private pathForSwaggerConfigurationFile = ConfigurationPath.swagger;\n\n    protected logger = new Logger(\"ConfigurationLoader\");\n\n    /**\n     * @returns { boolean }\n     */\n    public existsApplicationConfiguration(): boolean {\n        return existsSync(this.pathForApplicationConfigurationFile);\n    }\n\n    /**\n     * @returns { boolean }\n     */\n    public existsDatabaseConfiguration(): boolean {\n        return existsSync(this.pathForDatabaseConfigurationFile);\n    }\n\n    /**\n     * @returns { boolean }\n     */\n    public existsGraphqlConfiguration(): boolean {\n        return existsSync(this.pathForGraphqlConfigurationFile);\n    }\n\n    /**\n     * @returns { boolean }\n     */\n    public existsServerConfiguration(): boolean {\n        return existsSync(this.pathForServerConfigurationFile);\n    }\n\n    /**\n     * @returns { boolean }\n     */\n    public existsSwaggerConfiguration(): boolean {\n        return existsSync(this.pathForSwaggerConfigurationFile);\n    }\n\n    /**\n     * @param { string } path\n     *\n     * @returns { T }\n     */\n    public load<T>(path: string): T {\n        return Json.load<T>(path);\n    }\n\n    /**\n     * @returns { ApplicationConfiguration }\n     */\n    public loadApplicationConfiguration(): ApplicationConfiguration {\n        return this.load<ApplicationConfiguration>(this.pathForDatabaseConfigurationFile);\n    }\n\n    /**\n     * @returns { DatabaseConfiguration }\n     */\n    public loadDatabaseConfiguration(): DatabaseConfiguration {\n        const configuration = this.load<DatabaseConfiguration>(this.pathForDatabaseConfigurationFile);\n        Object.assign(configuration, {\n            logger: new TypeormLogger(\"all\"),\n        });\n\n        return configuration;\n    }\n\n    /**\n     * @returns { GraphqlConfiguration }\n     */\n    public loadGraphqlConfiguration(): GraphqlConfiguration {\n        return this.load<GraphqlConfiguration>(this.pathForGraphqlConfigurationFile);\n    }\n\n    /**\n     * @returns { ServerConfiguration }\n     */\n    public loadServerConfiguration(): ServerConfiguration {\n        return this.load<ServerConfiguration>(this.pathForServerConfigurationFile);\n    }\n\n    /**\n     * @returns { SwaggerConfiguration }\n     */\n    public loadSwaggerConfiguration(): SwaggerConfiguration {\n        return this.load<SwaggerConfiguration>(this.pathForSwaggerConfigurationFile);\n    }\n}\n\nexport const Configuration = new ConfigurationLoader();\n"]}