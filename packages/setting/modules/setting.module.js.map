{"version":3,"sources":["modules/setting.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,uCAAgE;AAChE,mDAAuD;AACvD,iDAAmD;AACnD,2CAA2E;AAC3E,uCAAyC;AACzC,0CAAsC;AACtC,4CAAgD;AAChD,0CAA6C;AAC7C,6CAAgD;AAmBhD,IAAa,aAAa,GAA1B;IACI,YACqB,SAAoB,EACpB,OAAmB,EACnB,KAAe;QAFf,cAAS,GAAT,SAAS,CAAW;QACpB,YAAO,GAAP,OAAO,CAAY;QACnB,UAAK,GAAL,KAAK,CAAU;IAEpC,CAAC;IAED,YAAY;QACR,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,0BAAe,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAa,CAAC,CAAC;IACvC,CAAC;CACJ,CAAA;AAdY,aAAa;IAjBzB,eAAM,CAAC;QACJ,UAAU,EAAE;YACR,GAAG,0BAAe;YAClB,GAAG,wBAAa;YAChB,4BAAgB;YAChB,yBAAc;SACjB;QACD,OAAO,EAAE;YACL,yBAAc;SACjB;QACD,OAAO,EAAE;YACL,uBAAa,CAAC,UAAU,CAAC;gBACrB,kBAAO;aACV,CAAC;YACF,iBAAU;SACb;KACJ,CAAC;qCAGkC,gBAAS;QACX,iBAAU;QACZ,eAAQ;GAJ3B,aAAa,CAczB;AAdY,sCAAa","file":"setting.module.js","sourcesContent":["import { CommandBus, CQRSModule, EventBus } from \"@nestjs/cqrs\";\nimport { commandHandlers } from \"../commands/handlers\";\nimport { eventHandlers } from \"../events/handlers\";\nimport { MiddlewaresConsumer, Module, OnModuleInit } from \"@nestjs/common\";\nimport { ModuleRef } from \"@nestjs/core\";\nimport { Setting } from \"../entities\";\nimport { SettingResolvers } from \"../resolvers\";\nimport { SettingService } from \"../services\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\n@Module({\n    components: [\n        ...commandHandlers,\n        ...eventHandlers,\n        SettingResolvers,\n        SettingService,\n    ],\n    exports: [\n        SettingService,\n    ],\n    imports: [\n        TypeOrmModule.forFeature([\n            Setting,\n        ]),\n        CQRSModule,\n    ]\n})\nexport class SettingModule implements OnModuleInit {\n    constructor(\n        private readonly moduleRef: ModuleRef,\n        private readonly command: CommandBus,\n        private readonly event: EventBus,\n    ) {\n    }\n\n    onModuleInit() {\n        this.command.setModuleRef(this.moduleRef);\n        this.command.register(commandHandlers);\n        this.event.setModuleRef(this.moduleRef);\n        this.event.register(eventHandlers);\n    }\n}\n"]}