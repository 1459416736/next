{"version":3,"sources":["builders/mongo-schema.builder.ts"],"names":[],"mappings":";;AAEA,kFAAgG;AAEhG,wBAAgC,SAAQ,uCAAa;IAMjD,KAAK,CAAC,KAAK;QACP,MAAM,WAAW,GAAI,IAAI,CAAC,UAAU,CAAC,MAAsB,CAAC,iBAAiB,EAAE,CAAC;QAChF,MAAM,QAAQ,GAAwB,EAAE,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC9B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC7B,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACrF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC,CAAC;YACpH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAKM,YAAY,CAAC,SAAgC;QAChD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;CACJ;AAxBD,gDAwBC","file":"mongo-schema.builder.js","sourcesContent":["import { EntityMetadata } from \"typeorm/metadata/EntityMetadata\";\nimport { MongoDriver } from \"typeorm/driver/mongodb/MongoDriver\";\nimport { MongoSchemaBuilder as SchemaBuilder } from \"typeorm/schema-builder/MongoSchemaBuilder\";\n\nexport class MongoSchemaBuilder extends SchemaBuilder {\n    protected metadatas: Array<EntityMetadata>;\n\n    /**\n     * @returns { Promise<void> }\n     */\n    async build(): Promise<void> {\n        const queryRunner = (this.connection.driver as MongoDriver).createQueryRunner();\n        const promises: Array<Promise<any>> = [];\n        this.metadatas.forEach(metadata => {\n            metadata.indices.forEach(index => {\n                const options = { name: index.name, unique: index.isUnique, sparse: index.isSparse };\n                promises.push(queryRunner.createCollectionIndex(metadata.tableName, index.columnNamesWithOrderingMap, options));\n            });\n        });\n        await Promise.all(promises);\n    }\n\n    /**\n     * @param { Array<EntityMetadata> } metadatas\n     */\n    public setMetadatas(metadatas: Array<EntityMetadata>) {\n        this.metadatas = metadatas;\n    }\n}\n"]}